// Generated by CoffeeScript 1.8.0

/*
jQuery fullsizable plugin v2.1.0
  - take full available browser space to show images

(c) 2011-2015 Matthias Schmidt <http://m-schmidt.eu/>

Example Usage:
  $('a.fullsizable').fullsizable();

Options:
  **detach_id** (optional, defaults to null) - id of an element that will temporarely be set to ``display: none`` after the curtain loaded.
  **navigation** (optional, defaults to true) - show next and previous links when working with a set of images.
  **closeButton** (optional, defaults to true) - show a close link.
  **fullscreenButton** (optional, defaults to true) - show full screen button for native HTML5 fullscreen support in supported browsers.
  **openOnClick** (optional, defaults to true) - set to false to disable default behavior which fullsizes an image when clicking on a thumb.
  **clickBehaviour** (optional, 'next' or 'close', defaults to 'close') - whether a click on an opened image should close the viewer or open the next image.
  **preload** (optional, defaults to true) - lookup selector on initialization, set only to false in combination with ``reloadOnOpen: true`` or ``fullsizable:reload`` event.
  **reloadOnOpen** (optional, defaults to false) - lookup selector every time the viewer opens.
  **loop** (optional, defaults to false) - don't hide prev/next button on first/last image, so images are looped
 */

(function() {
  var $, $imageHolder, bindCurtainEvents, closeFullscreen, closeViewer, containerId, currentImage, hasFullscreenSupport, hideChrome, imageHolderId, images, keyPressed, makeFullsizable, mouseMovement, mouseStart, nextImage, openViewer, options, preloadImage, prepareCurtain, prevImage, resizeImage, showChrome, showImage, spinnerClass, storedScrollPosition, toggleFullscreen, unbindCurtainEvents;

  $ = jQuery;

  containerId = '#jquery-fullsizable';

  imageHolderId = '#fullsized_image_holder';

  spinnerClass = 'fullsized_spinner';

  $imageHolder = $('<div id="jquery-fullsizable"><div id="fullsized_image_holder"></div></div>');

  images = [];

  currentImage = 0;

  options = null;

  storedScrollPosition = null;

  resizeImage = function() {
    var image;
    image = images[currentImage];
    if (image.ratio == null) {
      image.ratio = (image.naturalHeight / image.naturalWidth).toFixed(2);
    }
    if ($(window).height() / image.ratio > $(window).width()) {
      $(image).width($(window).width());
      $(image).height($(window).width() * image.ratio);
      return $(image).css('margin-top', ($(window).height() - $(image).height()) / 2);
    } else {
      $(image).height($(window).height());
      $(image).width($(window).height() / image.ratio);
      return $(image).css('margin-top', 0);
    }
  };

  keyPressed = function(e) {
      if (e.keyCode === 27) {
            closeViewer();
      }
      if (e.keyCode === 13) {
          toggleFullscreen();
      }
      if (e.keyCode === 32) {
          ShowDetail();
      }
    if (e.keyCode === 37) {
      prevImage(true);
    }
    if (e.keyCode === 39) {
      return nextImage(true);
    }
    if (e.keyCode === 40) {
        if ($('#seeMore > span').html() == 'More') {
             SeeMoreDetail();
        }
    }
    if (e.keyCode === 38) {
        if ($('#seeMore > span').html() == 'Hide') {
            SeeLessDetail();
        }
    }
  };

  prevImage = function(shouldHideChrome) {
    if (shouldHideChrome == null) {
      shouldHideChrome = false;
    }
    if (currentImage > 0) {
      return showImage(images[currentImage - 1], -1, shouldHideChrome);
    } else if (options.loop) {
      return showImage(images[images.length - 1], -1, shouldHideChrome);
    }
  };

  nextImage = function(shouldHideChrome) {
    if (shouldHideChrome == null) {
      shouldHideChrome = false;
    }
    if (currentImage < images.length - 1) {
      return showImage(images[currentImage + 1], 1, shouldHideChrome);
    } else if (options.loop) {
      return showImage(images[0], 1, shouldHideChrome);
    }
  };

  ShowDetail = function () {
      if ($("#fullsized_image_info").is(":visible")) {
          $("#fullsized_image_info").empty();
          $("#fullsized_image_info").hide();
          $("#fullsized_image_holder").css('-webkit-filter', 'blur(0)');
          $("#fullsized_image_holder").css('-moz-filter', 'blur(0)');
          $("#fullsized_image_holder").css('-o-filter', 'blur(0)');
          $("#fullsized_image_holder").css('-o-filter', 'blur(0)');
          $("#fullsized_image_holder").css('filter', 'blur(0)');
          $("#fullsized_image_holder").css('opacity', '1');
          $("#fullsized_image_holder").css('-webkit-transform', 'translateZ(0)');
      }
      else {
          $("#fullsized_image_info").show();
          GenDetailList(images[currentImage]);
          $("#fullsized_image_holder").css('-webkit-filter', 'blur(5px)');
          $("#fullsized_image_holder").css('-moz-filter', 'blur(5px)');
          $("#fullsized_image_holder").css('-o-filter', 'blur(5px)');
          $("#fullsized_image_holder").css('-o-filter', 'blur(5px)');
          $("#fullsized_image_holder").css('filter', 'blur(5px)');
          $("#fullsized_image_holder").css('opacity', '0.4');
      }
  }
  GenDetailList = function (image) {
      var cameraModel = (image.getAttribute('data-CameraModel') == '' ? 'N/A' : image.getAttribute('data-CameraModel'));
      var lensModel = (image.getAttribute('data-LensModel') == '' ? 'N/A' : image.getAttribute('data-LensModel'));
      var aperture = (image.getAttribute('data-Aperture') == '' ? 'N/A' : image.getAttribute('data-Aperture'));
      var captureTime = (image.getAttribute('data-CaptureTime') == '' ? 'N/A' : image.getAttribute('data-CaptureTime'));
      $("#fullsized_image_info").append('<ul class="list-group" id="fullsized_image_info_list"></ul>');
      $("#fullsized_image_info_list").append('<li><span class="glyphicon glyphicon-camera"></span>&nbsp;&nbsp;<kbd>' + cameraModel+ '</kbd></li>');
      $("#fullsized_image_info_list").append('<li><span class="glyphicon glyphicon-facetime-video"></span>&nbsp;&nbsp;<kbd>' + lensModel + '</kbd></li>');
      $("#fullsized_image_info_list").append('<li><span class="glyphicon glyphicon-eye-open"></span>&nbsp;&nbsp;<kbd>' + aperture+ '</kbd></li>');
      $("#fullsized_image_info_list").append('<li><span class="glyphicon glyphicon-calendar"></span>&nbsp;&nbsp;<kbd>' + captureTime + '</kbd></li>');
      $("#fullsized_image_info").append('<div id="seeMore" onmouseover="SeeMoreDetail()"><span class="glyphicon glyphicon-arrow-down">More</span></div>');
  }
  //  public string ImageHeight { get; set; }
  //  public string ImageWidth { get; set; }
  //  public string CameraModel { get; set; }
  //  public string Software { get; set; }
  //  public string Exposure { get; set; }
  //  public string Aperture { get; set; }
  //  public string FocusProgram { get; set; }
  //  public string ISO { get; set; }
  //  public string CaptureTime { get; set; }
  //  public string Flash { get; set; }
  //  public string FocusLength { get; set; }
  //  public string WhiteBalanceMode { get; set; }
    //  public string LensModel { get; set; }
  SeeLessDetail = function () {
      $("#fullsized_image_info_list > li:gt(3)").remove();
      $('#seeMore > span').attr('class', 'glyphicon glyphicon-arrow-down');
      $('#seeMore > span').html('More');
      $('#seeMore').attr('onmouseover', 'SeeMoreDetail()');
  }
  SeeMoreDetail = function () {
      image = images[currentImage];
      $('#seeMore > span').attr('class', 'glyphicon glyphicon-arrow-up');
      $('#seeMore > span').html('Hide');
      $('#seeMore').attr('onmouseover', 'SeeLessDetail()');
      var imageHeight = (image.getAttribute('data-ImageHeight') == '' ? 'N/A' : image.getAttribute('data-ImageHeight'));
      var imageWidth = (image.getAttribute('data-ImageWidth') == '' ? 'N/A' : image.getAttribute('data-ImageWidth'));
      var exposure = (image.getAttribute('data-Exposure') == '' ? 'N/A' : image.getAttribute('data-Exposure'));
      var flash = (image.getAttribute('data-Flash') == '' ? 'N/A' : image.getAttribute('data-Flash'));
      var focusLength= (image.getAttribute('data-FocusLength') == '' ? 'N/A' : image.getAttribute('data-FocusLength'));
      $("#fullsized_image_info_list").append('<li><span class="glyphicon glyphicon-resize-vertical"></span>&nbsp;&nbsp;<kbd>' + imageHeight + '</kbd></li>');
      $("#fullsized_image_info_list").append('<li><span class="glyphicon glyphicon-resize-horizontal"></span>&nbsp;&nbsp;<kbd>' + imageWidth+ '</kbd></li>');
      $("#fullsized_image_info_list").append('<li><span class="glyphicon glyphicon-time"></span>&nbsp;&nbsp;<kbd>' +exposure+ '</kbd></li>');
      $("#fullsized_image_info_list").append('<li><span class="glyphicon glyphicon-flash"></span>&nbsp;&nbsp;<kbd>' + flash + '</kbd></li>');
      $("#fullsized_image_info_list").append('<li><span class=" glyphicon glyphicon-screenshot"></span>&nbsp;&nbsp;<kbd>' + focusLength + '</kbd></li>');
     
  }
  RefreshDetail = function (image) {
      if ($("#fullsized_image_info").is(":visible")) {
          $("#fullsized_image_info").empty();
          GenDetailList(image);
      }
  }

  showImage = function(image, direction, shouldHideChrome) {
    if (direction == null) {
      direction = 1;
    }
    if (shouldHideChrome == null) {
      shouldHideChrome = false;
    }
    RefreshDetail(image);
    currentImage = image.index;
    $(imageHolderId).hide();
    $(imageHolderId).html(image);
    if (options.navigation) {
      if (shouldHideChrome === true) {
        hideChrome();
      } else {
        showChrome();
      }
    }
    if (image.loaded != null) {
      $(containerId).removeClass(spinnerClass);
      resizeImage();
      $(imageHolderId).fadeIn('fast');
      return preloadImage(direction);
    } else {
      $(containerId).addClass(spinnerClass);
      image.onload = function() {
        resizeImage();
        $(imageHolderId).fadeIn('slow', function() {
          return $(containerId).removeClass(spinnerClass);
        });
        this.loaded = true;
        return preloadImage(direction);
      };
      return image.src = image.buffer_src;
    }
  };

  preloadImage = function(direction) {
    var preload_image;
    if (direction === 1 && currentImage < images.length - 1) {
      preload_image = images[currentImage + 1];
    } else if ((direction === -1 || currentImage === (images.length - 1)) && currentImage > 0) {
      preload_image = images[currentImage - 1];
    } else {
      return;
    }
    preload_image.onload = function() {
      return this.loaded = true;
    };
    if (preload_image.src === '') {
      return preload_image.src = preload_image.buffer_src;
    }
  };

  openViewer = function(image, openingSelector) {
    $('body').append($imageHolder);
    $(window).bind('resize', resizeImage);
    showImage(image);
    return $(containerId).hide().fadeIn(function() {
      if (options.detach_id != null) {
        storedScrollPosition = $(window).scrollTop();
        $('#' + options.detach_id).css('display', 'none');
        resizeImage();
      }
      bindCurtainEvents();
      return $(document).trigger('fullsizable:opened', openingSelector);
    });
  };

  closeViewer = function() {
    if (options.detach_id != null) {
      $('#' + options.detach_id).css('display', 'block');
      $(window).scrollTop(storedScrollPosition);
    }
    $(containerId).fadeOut(function() {
      return $imageHolder.remove();
    });
    closeFullscreen();
    $(containerId).removeClass(spinnerClass);
    unbindCurtainEvents();
    return $(window).unbind('resize', resizeImage);
  };

  makeFullsizable = function() {
    images.length = 0;
    return $(options.selector).each(function() {
      var image;
      image = new Image;
      image.buffer_src = $(this).attr('href');
      image.setAttribute('data-ImageName', $(this).attr('data-ImageName'));
      image.setAttribute('data-CameraModel', $(this).attr('data-CameraModel'));
      image.setAttribute('data-ImageHeight', $(this).attr('data-ImageHeight'));
      image.setAttribute('data-ImageWidth', $(this).attr('data-ImageWidth'));
      image.setAttribute('data-Software', $(this).attr('data-Software'));
      image.setAttribute('data-Exposure', $(this).attr('data-Exposure'));
      image.setAttribute('data-Aperture', $(this).attr('data-Aperture'));
      image.setAttribute('data-FocusProgram', $(this).attr('data-FocusProgram'));
      image.setAttribute('data-ISO', $(this).attr('data-ISO'));
      image.setAttribute('data-CaptureTime', $(this).attr('data-CaptureTime'));
      image.setAttribute('data-Flash', $(this).attr('data-Flash'));
      image.setAttribute('data-FocusLength', $(this).attr('data-FocusLength'));
      image.setAttribute('data-WhiteBalanceMode', $(this).attr('data-WhiteBalanceMode'));
      image.setAttribute('data-LensModel', $(this).attr('data-LensModel'));
      image.index = images.length;
      images.push(image);
      if (options.openOnClick) {
        return $(this).click(function(e) {
          e.preventDefault();
          if (options.reloadOnOpen) {
            makeFullsizable();
          }
          return openViewer(image, this);
        });
      }
    });
  };

  prepareCurtain = function () {
      $imageHolder.append('<div id="fullsized_image_info" style="display:none"></div>');
    if (options.navigation) {
      $imageHolder.append('<a id="fullsized_go_prev" href="#prev"></a><a id="fullsized_go_next" href="#next"></a>');
      $(document).on('click', '#fullsized_go_prev', function(e) {
        e.preventDefault();
        e.stopPropagation();
        return prevImage();
      });
      $(document).on('click', '#fullsized_go_next', function(e) {
        e.preventDefault();
        e.stopPropagation();
        return nextImage();
      });
    }
    if (options.closeButton) {
      $imageHolder.append('<a id="fullsized_close" href="#close"></a>');
      $(document).on('click', '#fullsized_close', function(e) {
        e.preventDefault();
        e.stopPropagation();
        return closeViewer();
      });
    }
    if (options.fullscreenButton && hasFullscreenSupport()) {
      $imageHolder.append('<a id="fullsized_fullscreen" href="#fullscreen"></a>');
      $(document).on('click', '#fullsized_fullscreen', function(e) {
        e.preventDefault();
        e.stopPropagation();
        return toggleFullscreen();
      });
    }
    switch (options.clickBehaviour) {
      case 'close':
        return $(document).on('click', containerId, closeViewer);
      case 'next':
        return $(document).on('click', containerId, function() {
            return nextImage(true);
        });
        case 'detail':
            return $(document).on('click', containerId, ShowDetail);
      default:
        return $(document).on('click', containerId, options.clickBehaviour);
    }
  };

  bindCurtainEvents = function() {
    $(document).bind('keydown', keyPressed);
    $(document).bind('fullsizable:next', function() {
      return nextImage(true);
    });
    $(document).bind('fullsizable:prev', function() {
      return prevImage(true);
    });
    return $(document).bind('fullsizable:close', closeViewer);
  };

  unbindCurtainEvents = function() {
    $(document).unbind('keydown', keyPressed);
    $(document).unbind('fullsizable:next');
    $(document).unbind('fullsizable:prev');
    return $(document).unbind('fullsizable:close');
  };

  hideChrome = function() {
    var $chrome;
    $chrome = $imageHolder.find('a');
    if ($chrome.is(':visible') === true) {
      $chrome.toggle(false);
      return $imageHolder.bind('mousemove', mouseMovement);
    }
  };

  mouseStart = null;

  mouseMovement = function(event) {
    var distance;
    if (mouseStart === null) {
      mouseStart = [event.clientX, event.clientY];
    }
    distance = Math.round(Math.sqrt(Math.pow(mouseStart[1] - event.clientY, 2) + Math.pow(mouseStart[0] - event.clientX, 2)));
    if (distance >= 10) {
      $imageHolder.unbind('mousemove', mouseMovement);
      mouseStart = null;
      return showChrome();
    }
  };

  showChrome = function() {
    $('#fullsized_close, #fullsized_fullscreen').toggle(true);
    if (options.loop) {
      $('#fullsized_go_prev').show();
      return $('#fullsized_go_next').show();
    } else {
      $('#fullsized_go_prev').toggle(currentImage !== 0);
      return $('#fullsized_go_next').toggle(currentImage !== images.length - 1);
    }
  };

  $.fn.fullsizable = function(opts) {
    options = $.extend({
      selector: this.selector,
      detach_id: null,
      navigation: true,
      closeButton: true,
      fullscreenButton: true,
      openOnClick: true,
      clickBehaviour: 'close',
      preload: true,
      reloadOnOpen: false,
      loop: false
    }, opts || {});
    prepareCurtain();
    if (options.preload) {
      makeFullsizable();
    }
    $(document).bind('fullsizable:reload', makeFullsizable);
    $(document).bind('fullsizable:open', function(e, target) {
      var image, i, len, results;
      if (options.reloadOnOpen) {
        makeFullsizable();
      }
      results = [];
      for (i = 0, len = images.length; i < len; i++) {
        image = images[i];
        if (image.buffer_src === $(target).attr('href')) {
          results.push(openViewer(image, target));
        } else {
          results.push(void 0);
        }
      }
      return results;
    });
    return this;
  };

  hasFullscreenSupport = function() {
    var fsDom;
    fsDom = $imageHolder.get(0);
    if (fsDom.requestFullScreen || fsDom.webkitRequestFullScreen || fsDom.mozRequestFullScreen) {
      return true;
    } else {
      return false;
    }
  };

  closeFullscreen = function() {
    return toggleFullscreen(true);
  };

  toggleFullscreen = function(forceClose) {
    var fsDom;
    fsDom = $imageHolder.get(0);
    if (fsDom.requestFullScreen) {
      if (document.fullScreen || forceClose) {
        return document.exitFullScreen();
      } else {
        return fsDom.requestFullScreen();
      }
    } else if (fsDom.webkitRequestFullScreen) {
      if (document.webkitIsFullScreen || forceClose) {
        return document.webkitCancelFullScreen();
      } else {
        return fsDom.webkitRequestFullScreen();
      }
    } else if (fsDom.mozRequestFullScreen) {
      if (document.mozFullScreen || forceClose) {
        return document.mozCancelFullScreen();
      } else {
        return fsDom.mozRequestFullScreen();
      }
    }
  };

}).call(this);
